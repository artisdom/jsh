#ifndef READLINE_HPP
#define READLINE_HPP

#include <node.h>
#include <readline/readline.h>

class ReadLine : public node::ObjectWrap
{
public:
    static void init(v8::Handle<v8::Object> target);

private:
    ReadLine();
    ~ReadLine();

    static v8::Handle<v8::Value> New(const v8::Arguments& args);
    static void RunCallback(uv_async_t* handle, int /*status*/);
    static void Run(uv_work_t *req);
    static void Done(uv_work_t *req, int /*status*/);

    void handleLine(char* line);

private:
    uv_loop_t* loop;
    uv_work_t work;
    uv_async_t async;

private:
    static v8::Persistent<v8::FunctionTemplate> constructor;
    v8::Persistent<v8::Function> callback;
};

#endif
