#ifndef READLINE_HPP
#define READLINE_HPP

#include <nan.h>
#include <termios.h>
#include <unistd.h>
#include <sys/types.h>

class JSH : public node::ObjectWrap
{
public:
    static void init(v8::Handle<v8::Object> target);

    bool interactive() const { return interact; }
    pid_t pgid() const { return shellPgid; }
    termios* term() { return &shellTmodes; }

    v8::Persistent<v8::ObjectTemplate>& templ() { return termiosTemplate; }

private:
    JSH();
    ~JSH();

    void cleanup();

    static NAN_METHOD(New);
    static NAN_METHOD(setupShell);
    static NAN_METHOD(cleanup);
    static NAN_METHOD(isExecutable);
    static NAN_METHOD(execSync);
    static NAN_METHOD(flockSync);
    static NAN_METHOD(writeStdout);
    static NAN_METHOD(writeStderr);

private:
    bool interact;
    pid_t shellPgid;
    termios shellTmodes;

private:
    static v8::Persistent<v8::FunctionTemplate> constructor;
    v8::Persistent<v8::ObjectTemplate> termiosTemplate;
};

#endif
